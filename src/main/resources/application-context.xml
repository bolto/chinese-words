<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
 xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="
                        http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd 
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                        http://www.springframework.org/schema/oxm
                        http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util-3.0.xsd">

 <!-- Enables automatic mapping of fund objects to and from JSON -->
 <mvc:annotation-driven />

 <!-- we can use annotations -->
 <context:annotation-config />
 <!-- package to look for annotated classes -->
 <!-- <context:component-scan base-package="com.ixeron.chinese" /> -->
 <!-- -->
 <context:component-scan base-package="com.ixeron.chinese">
  <!-- <context:exclude-filter type="aspectj" expression="com.ixeron.chinese.webservice.rest.*"/> -->
  <context:exclude-filter type="regex"
   expression="com\.ixeron\.chinese\.tools\..*" />
 </context:component-scan>

 <!-- we will manage transactions with annotations -->

 <!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

 <!-- data source for our database -->
 <bean
  class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
  <property name="contentType" value="text/plain" />
 </bean>
 <bean
  class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
  <property name="messageConverters">
   <util:list id="beanList">
    <ref bean="jsonMessageConverter" />
   </util:list>
  </property>
 </bean>

 <!-- Converts JSON to POJO and vice versa -->
 <bean id="jsonMessageConverter"
  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
 <bean id="dataSource"
  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName"
   value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
  <property name="url" value="jdbc:mysql://localhost/chinesewords?UseUnicode=true&amp;characterEncoding=utf8" />
  <property name="username" value="dev" />
  <property name="password" value="peichieh" />

 </bean>
 <bean id="transactionManager"
  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
  <property name="sessionFactory" ref="sessionFactory" />
 </bean>
 <!-- configure hibernate session factory -->
 <bean id="sessionFactory"
  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
  <property name="dataSource" ref="dataSource" />
  <property name="packagesToScan">
   <list>
    <value>com.ixeron.chinese.domain</value>
   </list>
  </property>
  <property name="hibernateProperties">
   <props>
    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
    <prop key="hibernate.show_sql">false</prop>
    <prop key="hibernate.generate_statistics">false</prop>
    <prop key="hibernate.use_sql_comments">false</prop>    <prop key="hibernate.hbm2ddl.auto">update</prop>
    <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
    <prop key="hibernate.connection.charSet">UTF-8</prop>
   </props>
  </property>
  <property name="namingStrategy">
   <bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
  </property>
 </bean>
</beans>